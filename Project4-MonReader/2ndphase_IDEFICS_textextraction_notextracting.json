{
    "nbformat": 4,
    "nbformat_minor": 0,
    "metadata": {
        "colab": {
            "provenance": [],
            "gpuType": "T4",
            "toc_visible": true,
            "authorship_tag": "ABX9TyNR03aG1cIEHigheNkYI39S"
        },
        "kernelspec": {
            "name": "python3",
            "display_name": "Python 3"
        },
        "language_info": {
            "name": "python"
        },
        "accelerator": "GPU"
       
    },
    "cells": [
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {
                "colab": {
                    "base_uri": "https://localhost:8080/"
                },
                "id": "3D0eByalxT8m",
                "executionInfo": {
                    "status": "ok",
                    "timestamp": 1748959823811,
                    "user_tz": -540,
                    "elapsed": 21286,
                    "user": {
                        "displayName": "Yoojin Shin",
                        "userId": "07186274958969258933"
                    }
                },
                "outputId": "6508efe5-9663-4700-9aae-9e54a4286b1f"
            },
            "outputs": [
                {
                    "output_type": "stream",
                    "name": "stdout",
                    "text": [
                        "Mounted at /content/drive\n"
                    ]
                }
            ],
            "source": [
                "from google.colab import drive\n",
                "drive.mount('/content/drive')"
            ]
        },
        {
            "cell_type": "markdown",
            "source": [
                "### Install necessary packages"
            ],
            "metadata": {
                "id": "0DbQKpNOxyUV"
            }
        },
        {
            "cell_type": "code",
            "source": [
                "!pip uninstall -y transformers\n",
                "!pip install git+https://github.com/huggingface/transformers.git"
            ],
            "metadata": {
                "colab": {
                    "base_uri": "https://localhost:8080/"
                },
                "id": "4czIDl9Wx95v",
                "executionInfo": {
                    "status": "ok",
                    "timestamp": 1748959864864,
                    "user_tz": -540,
                    "elapsed": 36737,
                    "user": {
                        "displayName": "Yoojin Shin",
                        "userId": "07186274958969258933"
                    }
                },
                "outputId": "a38fc367-5a60-40bc-bd1a-1c368c681c33"
            },
            "execution_count": null,
            "outputs": [
                {
                    "output_type": "stream",
                    "name": "stdout",
                    "text": [
                        "Found existing installation: transformers 4.52.2\n",
                        "Uninstalling transformers-4.52.2:\n",
                        "  Successfully uninstalled transformers-4.52.2\n",
                        "Collecting git+https://github.com/huggingface/transformers.git\n",
                        "  Cloning https://github.com/huggingface/transformers.git to /tmp/pip-req-build-usn16_81\n",
                        "  Running command git clone --filter=blob:none --quiet https://github.com/huggingface/transformers.git /tmp/pip-req-build-usn16_81\n",
                        "  Resolved https://github.com/huggingface/transformers.git to commit e8b292e35f331d3c3de85f7e5d3496b0e13d3d6f\n",
                        "  Installing build dependencies ... \u001b[?25l\u001b[?25hdone\n",
                        "  Getting requirements to build wheel ... \u001b[?25l\u001b[?25hdone\n",
                        "  Preparing metadata (pyproject.toml) ... \u001b[?25l\u001b[?25hdone\n",
                        "Requirement already satisfied: filelock in /usr/local/lib/python3.11/dist-packages (from transformers==4.53.0.dev0) (3.18.0)\n",
                        "Requirement already satisfied: huggingface-hub<1.0,>=0.30.0 in /usr/local/lib/python3.11/dist-packages (from transformers==4.53.0.dev0) (0.31.4)\n",
                        "Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.11/dist-packages (from transformers==4.53.0.dev0) (2.0.2)\n",
                        "Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.11/dist-packages (from transformers==4.53.0.dev0) (24.2)\n",
                        "Requirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.11/dist-packages (from transformers==4.53.0.dev0) (6.0.2)\n",
                        "Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.11/dist-packages (from transformers==4.53.0.dev0) (2024.11.6)\n",
                        "Requirement already satisfied: requests in /usr/local/lib/python3.11/dist-packages (from transformers==4.53.0.dev0) (2.32.3)\n",
                        "Requirement already satisfied: tokenizers<0.22,>=0.21 in /usr/local/lib/python3.11/dist-packages (from transformers==4.53.0.dev0) (0.21.1)\n",
                        "Requirement already satisfied: safetensors>=0.4.3 in /usr/local/lib/python3.11/dist-packages (from transformers==4.53.0.dev0) (0.5.3)\n",
                        "Requirement already satisfied: tqdm>=4.27 in /usr/local/lib/python3.11/dist-packages (from transformers==4.53.0.dev0) (4.67.1)\n",
                        "Requirement already satisfied: fsspec>=2023.5.0 in /usr/local/lib/python3.11/dist-packages (from huggingface-hub<1.0,>=0.30.0->transformers==4.53.0.dev0) (2025.3.2)\n",
                        "Requirement already satisfied: typing-extensions>=3.7.4.3 in /usr/local/lib/python3.11/dist-packages (from huggingface-hub<1.0,>=0.30.0->transformers==4.53.0.dev0) (4.13.2)\n",
                        "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests->transformers==4.53.0.dev0) (3.4.2)\n",
                        "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.11/dist-packages (from requests->transformers==4.53.0.dev0) (3.10)\n",
                        "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests->transformers==4.53.0.dev0) (2.4.0)\n",
                        "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.11/dist-packages (from requests->transformers==4.53.0.dev0) (2025.4.26)\n",
                        "Building wheels for collected packages: transformers\n",
                        "  Building wheel for transformers (pyproject.toml) ... \u001b[?25l\u001b[?25hdone\n",
                        "  Created wheel for transformers: filename=transformers-4.53.0.dev0-py3-none-any.whl size=11382826 sha256=bc06a65277b0da5513b01d6af1c8210615d107a30d3ad0d328661bb873be257a\n",
                        "  Stored in directory: /tmp/pip-ephem-wheel-cache-0r5c3ikj/wheels/32/4b/78/f195c684dd3a9ed21f3b39fe8f85b48df7918581b6437be143\n",
                        "Successfully built transformers\n",
                        "Installing collected packages: transformers\n",
                        "Successfully installed transformers-4.53.0.dev0\n"
                    ]
                }
            ]
        },
        {
            "cell_type": "code",
            "source": [
                "!pip install accelerate bitsandbytes"
            ],
            "metadata": {
                "colab": {
                    "base_uri": "https://localhost:8080/"
                },
                "id": "eTEn1jZnzbWu",
                "executionInfo": {
                    "status": "ok",
                    "timestamp": 1748959985120,
                    "user_tz": -540,
                    "elapsed": 120254,
                    "user": {
                        "displayName": "Yoojin Shin",
                        "userId": "07186274958969258933"
                    }
                },
                "outputId": "60c87d09-aaac-4300-b7c3-2fdbd3849293"
            },
            "execution_count": null,
            "outputs": [
                {
                    "output_type": "stream",
                    "name": "stdout",
                    "text": [
                        "Requirement already satisfied: accelerate in /usr/local/lib/python3.11/dist-packages (1.7.0)\n",
                        "Collecting bitsandbytes\n",
                        "  Downloading bitsandbytes-0.46.0-py3-none-manylinux_2_24_x86_64.whl.metadata (10 kB)\n",
                        "Requirement already satisfied: numpy<3.0.0,>=1.17 in /usr/local/lib/python3.11/dist-packages (from accelerate) (2.0.2)\n",
                        "Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.11/dist-packages (from accelerate) (24.2)\n",
                        "Requirement already satisfied: psutil in /usr/local/lib/python3.11/dist-packages (from accelerate) (5.9.5)\n",
                        "Requirement already satisfied: pyyaml in /usr/local/lib/python3.11/dist-packages (from accelerate) (6.0.2)\n",
                        "Requirement already satisfied: torch>=2.0.0 in /usr/local/lib/python3.11/dist-packages (from accelerate) (2.6.0+cu124)\n",
                        "Requirement already satisfied: huggingface-hub>=0.21.0 in /usr/local/lib/python3.11/dist-packages (from accelerate) (0.31.4)\n",
                        "Requirement already satisfied: safetensors>=0.4.3 in /usr/local/lib/python3.11/dist-packages (from accelerate) (0.5.3)\n",
                        "Requirement already satisfied: filelock in /usr/local/lib/python3.11/dist-packages (from huggingface-hub>=0.21.0->accelerate) (3.18.0)\n",
                        "Requirement already satisfied: fsspec>=2023.5.0 in /usr/local/lib/python3.11/dist-packages (from huggingface-hub>=0.21.0->accelerate) (2025.3.2)\n",
                        "Requirement already satisfied: requests in /usr/local/lib/python3.11/dist-packages (from huggingface-hub>=0.21.0->accelerate) (2.32.3)\n",
                        "Requirement already satisfied: tqdm>=4.42.1 in /usr/local/lib/python3.11/dist-packages (from huggingface-hub>=0.21.0->accelerate) (4.67.1)\n",
                        "Requirement already satisfied: typing-extensions>=3.7.4.3 in /usr/local/lib/python3.11/dist-packages (from huggingface-hub>=0.21.0->accelerate) (4.13.2)\n",
                        "Requirement already satisfied: networkx in /usr/local/lib/python3.11/dist-packages (from torch>=2.0.0->accelerate) (3.4.2)\n",
                        "Requirement already satisfied: jinja2 in /usr/local/lib/python3.11/dist-packages (from torch>=2.0.0->accelerate) (3.1.6)\n",
                        "Collecting nvidia-cuda-nvrtc-cu12==12.4.127 (from torch>=2.0.0->accelerate)\n",
                        "  Downloading nvidia_cuda_nvrtc_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n",
                        "Collecting nvidia-cuda-runtime-cu12==12.4.127 (from torch>=2.0.0->accelerate)\n",
                        "  Downloading nvidia_cuda_runtime_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n",
                        "Collecting nvidia-cuda-cupti-cu12==12.4.127 (from torch>=2.0.0->accelerate)\n",
                        "  Downloading nvidia_cuda_cupti_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl.metadata (1.6 kB)\n",
                        "Collecting nvidia-cudnn-cu12==9.1.0.70 (from torch>=2.0.0->accelerate)\n",
                        "  Downloading nvidia_cudnn_cu12-9.1.0.70-py3-none-manylinux2014_x86_64.whl.metadata (1.6 kB)\n",
                        "Collecting nvidia-cublas-cu12==12.4.5.8 (from torch>=2.0.0->accelerate)\n",
                        "  Downloading nvidia_cublas_cu12-12.4.5.8-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n",
                        "Collecting nvidia-cufft-cu12==11.2.1.3 (from torch>=2.0.0->accelerate)\n",
                        "  Downloading nvidia_cufft_cu12-11.2.1.3-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n",
                        "Collecting nvidia-curand-cu12==10.3.5.147 (from torch>=2.0.0->accelerate)\n",
                        "  Downloading nvidia_curand_cu12-10.3.5.147-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n",
                        "Collecting nvidia-cusolver-cu12==11.6.1.9 (from torch>=2.0.0->accelerate)\n",
                        "  Downloading nvidia_cusolver_cu12-11.6.1.9-py3-none-manylinux2014_x86_64.whl.metadata (1.6 kB)\n",
                        "Collecting nvidia-cusparse-cu12==12.3.1.170 (from torch>=2.0.0->accelerate)\n",
                        "  Downloading nvidia_cusparse_cu12-12.3.1.170-py3-none-manylinux2014_x86_64.whl.metadata (1.6 kB)\n",
                        "Requirement already satisfied: nvidia-cusparselt-cu12==0.6.2 in /usr/local/lib/python3.11/dist-packages (from torch>=2.0.0->accelerate) (0.6.2)\n",
                        "Requirement already satisfied: nvidia-nccl-cu12==2.21.5 in /usr/local/lib/python3.11/dist-packages (from torch>=2.0.0->accelerate) (2.21.5)\n",
                        "Requirement already satisfied: nvidia-nvtx-cu12==12.4.127 in /usr/local/lib/python3.11/dist-packages (from torch>=2.0.0->accelerate) (12.4.127)\n",
                        "Collecting nvidia-nvjitlink-cu12==12.4.127 (from torch>=2.0.0->accelerate)\n",
                        "  Downloading nvidia_nvjitlink_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n",
                        "Requirement already satisfied: triton==3.2.0 in /usr/local/lib/python3.11/dist-packages (from torch>=2.0.0->accelerate) (3.2.0)\n",
                        "Requirement already satisfied: sympy==1.13.1 in /usr/local/lib/python3.11/dist-packages (from torch>=2.0.0->accelerate) (1.13.1)\n",
                        "Requirement already satisfied: mpmath<1.4,>=1.1.0 in /usr/local/lib/python3.11/dist-packages (from sympy==1.13.1->torch>=2.0.0->accelerate) (1.3.0)\n",
                        "Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.11/dist-packages (from jinja2->torch>=2.0.0->accelerate) (3.0.2)\n",
                        "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests->huggingface-hub>=0.21.0->accelerate) (3.4.2)\n",
                        "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.11/dist-packages (from requests->huggingface-hub>=0.21.0->accelerate) (3.10)\n",
                        "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests->huggingface-hub>=0.21.0->accelerate) (2.4.0)\n",
                        "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.11/dist-packages (from requests->huggingface-hub>=0.21.0->accelerate) (2025.4.26)\n",
                        "Downloading bitsandbytes-0.46.0-py3-none-manylinux_2_24_x86_64.whl (67.0 MB)\n",
                        "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m67.0/67.0 MB\u001b[0m \u001b[31m11.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
                        "\u001b[?25hDownloading nvidia_cublas_cu12-12.4.5.8-py3-none-manylinux2014_x86_64.whl (363.4 MB)\n",
                        "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m363.4/363.4 MB\u001b[0m \u001b[31m4.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
                        "\u001b[?25hDownloading nvidia_cuda_cupti_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl (13.8 MB)\n",
                        "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m13.8/13.8 MB\u001b[0m \u001b[31m80.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
                        "\u001b[?25hDownloading nvidia_cuda_nvrtc_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl (24.6 MB)\n",
                        "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m24.6/24.6 MB\u001b[0m \u001b[31m61.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
                        "\u001b[?25hDownloading nvidia_cuda_runtime_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl (883 kB)\n",
                        "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m883.7/883.7 kB\u001b[0m \u001b[31m39.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
                        "\u001b[?25hDownloading nvidia_cudnn_cu12-9.1.0.70-py3-none-manylinux2014_x86_64.whl (664.8 MB)\n",
                        "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m664.8/664.8 MB\u001b[0m \u001b[31m1.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
                        "\u001b[?25hDownloading nvidia_cufft_cu12-11.2.1.3-py3-none-manylinux2014_x86_64.whl (211.5 MB)\n",
                        "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m211.5/211.5 MB\u001b[0m \u001b[31m5.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
                        "\u001b[?25hDownloading nvidia_curand_cu12-10.3.5.147-py3-none-manylinux2014_x86_64.whl (56.3 MB)\n",
                        "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m56.3/56.3 MB\u001b[0m \u001b[31m10.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
                        "\u001b[?25hDownloading nvidia_cusolver_cu12-11.6.1.9-py3-none-manylinux2014_x86_64.whl (127.9 MB)\n",
                        "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m127.9/127.9 MB\u001b[0m \u001b[31m7.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
                        "\u001b[?25hDownloading nvidia_cusparse_cu12-12.3.1.170-py3-none-manylinux2014_x86_64.whl (207.5 MB)\n",
                        "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m207.5/207.5 MB\u001b[0m \u001b[31m2.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
                        "\u001b[?25hDownloading nvidia_nvjitlink_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl (21.1 MB)\n",
                        "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m21.1/21.1 MB\u001b[0m \u001b[31m63.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
                        "\u001b[?25hInstalling collected packages: nvidia-nvjitlink-cu12, nvidia-curand-cu12, nvidia-cufft-cu12, nvidia-cuda-runtime-cu12, nvidia-cuda-nvrtc-cu12, nvidia-cuda-cupti-cu12, nvidia-cublas-cu12, nvidia-cusparse-cu12, nvidia-cudnn-cu12, nvidia-cusolver-cu12, bitsandbytes\n",
                        "  Attempting uninstall: nvidia-nvjitlink-cu12\n",
                        "    Found existing installation: nvidia-nvjitlink-cu12 12.5.82\n",
                        "    Uninstalling nvidia-nvjitlink-cu12-12.5.82:\n",
                        "      Successfully uninstalled nvidia-nvjitlink-cu12-12.5.82\n",
                        "  Attempting uninstall: nvidia-curand-cu12\n",
                        "    Found existing installation: nvidia-curand-cu12 10.3.6.82\n",
                        "    Uninstalling nvidia-curand-cu12-10.3.6.82:\n",
                        "      Successfully uninstalled nvidia-curand-cu12-10.3.6.82\n",
                        "  Attempting uninstall: nvidia-cufft-cu12\n",
                        "    Found existing installation: nvidia-cufft-cu12 11.2.3.61\n",
                        "    Uninstalling nvidia-cufft-cu12-11.2.3.61:\n",
                        "      Successfully uninstalled nvidia-cufft-cu12-11.2.3.61\n",
                        "  Attempting uninstall: nvidia-cuda-runtime-cu12\n",
                        "    Found existing installation: nvidia-cuda-runtime-cu12 12.5.82\n",
                        "    Uninstalling nvidia-cuda-runtime-cu12-12.5.82:\n",
                        "      Successfully uninstalled nvidia-cuda-runtime-cu12-12.5.82\n",
                        "  Attempting uninstall: nvidia-cuda-nvrtc-cu12\n",
                        "    Found existing installation: nvidia-cuda-nvrtc-cu12 12.5.82\n",
                        "    Uninstalling nvidia-cuda-nvrtc-cu12-12.5.82:\n",
                        "      Successfully uninstalled nvidia-cuda-nvrtc-cu12-12.5.82\n",
                        "  Attempting uninstall: nvidia-cuda-cupti-cu12\n",
                        "    Found existing installation: nvidia-cuda-cupti-cu12 12.5.82\n",
                        "    Uninstalling nvidia-cuda-cupti-cu12-12.5.82:\n",
                        "      Successfully uninstalled nvidia-cuda-cupti-cu12-12.5.82\n",
                        "  Attempting uninstall: nvidia-cublas-cu12\n",
                        "    Found existing installation: nvidia-cublas-cu12 12.5.3.2\n",
                        "    Uninstalling nvidia-cublas-cu12-12.5.3.2:\n",
                        "      Successfully uninstalled nvidia-cublas-cu12-12.5.3.2\n",
                        "  Attempting uninstall: nvidia-cusparse-cu12\n",
                        "    Found existing installation: nvidia-cusparse-cu12 12.5.1.3\n",
                        "    Uninstalling nvidia-cusparse-cu12-12.5.1.3:\n",
                        "      Successfully uninstalled nvidia-cusparse-cu12-12.5.1.3\n",
                        "  Attempting uninstall: nvidia-cudnn-cu12\n",
                        "    Found existing installation: nvidia-cudnn-cu12 9.3.0.75\n",
                        "    Uninstalling nvidia-cudnn-cu12-9.3.0.75:\n",
                        "      Successfully uninstalled nvidia-cudnn-cu12-9.3.0.75\n",
                        "  Attempting uninstall: nvidia-cusolver-cu12\n",
                        "    Found existing installation: nvidia-cusolver-cu12 11.6.3.83\n",
                        "    Uninstalling nvidia-cusolver-cu12-11.6.3.83:\n",
                        "      Successfully uninstalled nvidia-cusolver-cu12-11.6.3.83\n",
                        "Successfully installed bitsandbytes-0.46.0 nvidia-cublas-cu12-12.4.5.8 nvidia-cuda-cupti-cu12-12.4.127 nvidia-cuda-nvrtc-cu12-12.4.127 nvidia-cuda-runtime-cu12-12.4.127 nvidia-cudnn-cu12-9.1.0.70 nvidia-cufft-cu12-11.2.1.3 nvidia-curand-cu12-10.3.5.147 nvidia-cusolver-cu12-11.6.1.9 nvidia-cusparse-cu12-12.3.1.170 nvidia-nvjitlink-cu12-12.4.127\n"
                    ]
                }
            ]
        },
        {
            "cell_type": "markdown",
            "source": [
                "### IDEFICS"
            ],
            "metadata": {
                "id": "RVdUqnHT0PsK"
            }
        },
        {
            "cell_type": "markdown",
            "source": [
                "#### 1st Try"
            ],
            "metadata": {
                "id": "JyMt7VlLMg4S"
            }
        },
        {
            "cell_type": "code",
            "source": [
                "from transformers import AutoProcessor, AutoModelForCausalLM, Idefics2ForConditionalGeneration\n",
                "import torch\n",
                "from PIL import Image\n",
                "\n",
                "# Model loading\n",
                "model_id = \"HuggingFaceM4/idefics2-8b\"\n",
                "token = \"TOP SECRET\"\n",
                "\n",
                "# device\n",
                "device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n",
                "\n",
                "# Processor & Model Load\n",
                "processor = AutoProcessor.from_pretrained(model_id, token=token)\n",
                "model = Idefics2ForConditionalGeneration.from_pretrained(\n",
                "    model_id,\n",
                "    torch_dtype = torch.float16,\n",
                "    device_map = \"auto\",\n",
                "    token = token\n",
                ").eval()"
            ],
            "metadata": {
                "colab": {
                    "base_uri": "https://localhost:8080/",
                    "height": 387,
                    "referenced_widgets": [
                        "ae72c5ca571744c4abdd288ad09e6178",
                        "812b74578e244c9e9d09be9ff8b02034",
                        "6e8cb7b0fd344034ae07090766eb37ae",
                        "d363ec994cbb442ca04babbb181a0fea",
                        "9f981f44bf3d44da85adcda6b1d33c06",
                        "61f5dd906b314cf78f3488e5c0287a6c",
                        "44f1f393e257486ab3dfad4771569717",
                        "16c4adeddf8343a29b2da7b371e1d3e9",
                        "e40b2807ecfb42198b9dca14b2284bf8",
                        "2c3021fd1f7747b69b683cdd9a6845de",
                        "ced478a92064499197cb21a1adf672d5",
                        "f8641166107642eb98e1a31437fa461d",
                        "9948a6909aa646729a7a2a19e6d692b8",
                        "730fe486ce7d466a98f0f8f1ae72c78a",
                        "763f421b94ca4c1cbcf0fdd3f4f2df7b",
                        "0d1284ec5e984f22ba707df2038fea9f",
                        "7214fb6b68cc4df9969b712375607449",
                        "d6cf492e4b8b4db2b2a7c8bc103e61cf",
                        "0840d631798045bdb1c1a85602201197",
                        "6e069600ff97483d806d00bd3fee647a",
                        "22f4d34cd90f4056ad4deb478261f5b6",
                        "35f028c8b583481eb97297edb2009fd7",
                        "74b7db0112384d5f81776a8ba168997a",
                        "65c70c875bef4faca71a7361c867a964",
                        "8a38f397241344d2b4161e9b18be363e",
                        "435adbedc29b4d09a39b537f87d0d10c",
                        "bab8b6dac5fe41e9adf1cd5e39f030be",
                        "642cebbf49f14430a3d6a14368aab75c",
                        "df6b8ed803214a8e80872d2ee69e2c30",
                        "c6963f2f233d4f309e84d353c8fa874c",
                        "fd2b5351842844a3bcf4096d1c5e3a74",
                        "736d2e9e93de4753916016aa7badb960",
                        "db5e7709597340d8824e64cc3696d9c1",
                        "a4e491eadad1446887bdee0fba460711",
                        "d1a639f3b4f14b60b74125319a27b511",
                        "4554971d307d4a90a3e7c635320fbae5",
                        "12b176bc9f05479982b318b0453a2d00",
                        "61dd404d16a840eea947bed47bb494e6",
                        "eec2fa6961314ca5b4f7e47ec81abb7c",
                        "d5b1dfcb5f0748db94fedeaf31062ed3",
                        "292075f3c9cf454a9181a6b30dc11e54",
                        "f0420300444e4a218cf6c567415e0bab",
                        "f90d3d19d5434cf4bd8f28c4c147a4f4",
                        "8892870b94dd44659a1c15e38afc4c1b",
                        "7f867e16c5be41aab71591a89a020a0c",
                        "65636175c2fb4ef4ab9ee9a64a6d3569",
                        "1f8b0e59b23f425bae4a66a4db09bfad",
                        "d8af635d2d754c93a66fbac6ed5e4072",
                        "56a1c331957f4c259e69a5b443050714",
                        "562ae9ca2de94083b2e7f675b9319a7f",
                        "f63e01733f874076a4fbc4dedd686bad",
                        "35e5c73bf2714727a8e544335c587317",
                        "3415cb26f77744da92b9d9a126396911",
                        "b3b678efe3204a4a8d0d1d0d88ab7bef",
                        "583431a59c56481893a2192a09d3e18d",
                        "4238f698afe0429784e565030607e6f6",
                        "9b4a81ff54b24706ac13b36e6ba5ddc9",
                        "0f9cfd4b55c642488caa9151cf2f04f6",
                        "42370bcd96554c4794a495440133cfa5",
                        "0bd79130fb2b439d8e158d9be280f837",
                        "352b907e91f84a5da127ff26df915e41",
                        "7dac6a5c5af9435fb06d47fe4fb9da7e",
                        "8797f60d63a749499dff1306083ba972",
                        "0ee0a6fd4560421d806841063e7c2405",
                        "9fd45e25195e40f9ab9bd2b30d70aeff",
                        "974732ace2d24bf988797b20d4746d70",
                        "dc97c7f8d42e4f78a25d4b1ba221074e",
                        "3940c734dab84af890d56535ebcecdfb",
                        "0c9aff00580e479f861ff469246b2a84",
                        "6efc56f4cab1460e9b9b0f09ad2cdfde",
                        "fe7cd32a5dfb42b4a58e5ad4411db667",
                        "0aa567f845394023a804633fb64c394d",
                        "7da64ff3952046c58fdb84b474e3faa2",
                        "6d8564101eff4b719cc340c1f140cd00",
                        "6a371a96824647d18b746e47ed81b002",
                        "6d14d85256ce44bfa3c145338f52159e",
                        "caaac8314c774b31ab1ca893d81df276",
                        "dde3e7202d6e4f1aad6711f9fff637de",
                        "5f7484dc66334452b4a3ae50fcc39a79",
                        "f9044caa598e47dc9c2d054f71b17cbd",
                        "3f006a8a127f47f4a772087242f36174",
                        "e5ad45a64efb431ab6711630f2315df3",
                        "23f066e2ea7f45d8adfc70522d57e163",
                        "3d54181a33c64ff08049f5e52c0de4b9",
                        "dc61036078a94ea49da1dab528106252",
                        "bb521ec36c3f4a85896cf1941398249f",
                        "f99f4fb3c3ed4a2d8e7c85d9dedd6bc9",
                        "1a1a1ce1986041408ecc768f5cf3647c",
                        "0f494643bd794bccb352714a655664ed",
                        "6205290f1eb74ae98286cec6e5c3bb07",
                        "ad43ab178b17465e8a3933abdc077e27",
                        "612ff0d66c844bd299341ef7f7e6a427",
                        "ebd1c832b2f741d9b4885d8fc9131d4f",
                        "e97eb04c4f7242f291ea95f1db94b309",
                        "590c3b075ed54fe48d8c03fb6f479f86",
                        "8df04a25c62a4be2a3b3e5a5d05ba951",
                        "ed4d19ffe87f4cf3b07a980238d67377",
                        "1118a1016ec54891a261359a8edbe8e3",
                        "e14f6c7153ef483bb270a30e2ae5d1c4",
                        "0abc2994883a46c59e555a5b853c4c0e",
                        "6226736085154e5489246bbc248f8be9",
                        "f805e01e88bf400d8a5b97c8921c0e80",
                        "e3e9f91d71d34d9eb55ff124b9e1b1aa",
                        "5cf0eb3250b44b699618d48a94035eb8",
                        "e0a7cdf9fce94393b65d28ba887483f5",
                        "f1480704450245ff866ffba94d679d90",
                        "bee6bb5b8d7c4c5a93fbf6484a5281d1",
                        "f581c908248e41238937fb4ff87da985",
                        "7ada73c02b5540a7a2196d7c008ce0f3",
                        "b87b721107dd4a90b8f6c4cbc778f154",
                        "03665156aa3c43e5a46a6850cde53054",
                        "51ba7c5d76b84ca1a2012de5fe6ae909",
                        "a85413b6732546149406bfeaf016136c",
                        "f37d5a0378c1409e929cdc888e4565b8",
                        "a089533a4dc3463cb1ebe0b33a6c2356",
                        "4d5062158e6f4b15a43cb3134819f85e",
                        "ff96f8deec314bdfa3ca70105b59c2d2",
                        "9464548c3183404d9c2db35c80ba06ac",
                        "96a978de5a0a42b8a973c4d54d7d9920",
                        "14970348b5b048bf87620d24cb31bfac",
                        "863d9c01712c440a87a31d4764e7ea0f"
                    ]
                },
                "id": "7gV3gR_59sbt",
                "executionInfo": {
                    "status": "ok",
                    "timestamp": 1748943523707,
                    "user_tz": -540,
                    "elapsed": 568043,
                    "user": {
                        "displayName": "Yoojin Shin",
                        "userId": "07186274958969258933"
                    }
                },
                "outputId": "9cb2a290-14dd-4076-f7ea-38fbfa0ae3af"
            },
            "execution_count": null,
            "outputs": [
                {
                    "output_type": "display_data",
                    "data": {
                        "text/plain": [
                            "model.safetensors.index.json:   0%|          | 0.00/74.4k [00:00<?, ?B/s]"
                        ],
                        "application/vnd.jupyter.widget-view+json": {
                            "version_major": 2,
                            "version_minor": 0,
                            "model_id": "ae72c5ca571744c4abdd288ad09e6178"
                        }
                    },
                    "metadata": {}
                },
                {
                    "output_type": "display_data",
                    "data": {
                        "text/plain": [
                            "Fetching 7 files:   0%|          | 0/7 [00:00<?, ?it/s]"
                        ],
                        "application/vnd.jupyter.widget-view+json": {
                            "version_major": 2,
                            "version_minor": 0,
                            "model_id": "f8641166107642eb98e1a31437fa461d"
                        }
                    },
                    "metadata": {}
                },
                {
                    "output_type": "display_data",
                    "data": {
                        "text/plain": [
                            "model-00001-of-00007.safetensors:   0%|          | 0.00/4.64G [00:00<?, ?B/s]"
                        ],
                        "application/vnd.jupyter.widget-view+json": {
                            "version_major": 2,
                            "version_minor": 0,
                            "model_id": "74b7db0112384d5f81776a8ba168997a"
                        }
                    },
                    "metadata": {}
                },
                {
                    "output_type": "display_data",
                    "data": {
                        "text/plain": [
                            "model-00002-of-00007.safetensors:   0%|          | 0.00/4.99G [00:00<?, ?B/s]"
                        ],
                        "application/vnd.jupyter.widget-view+json": {
                            "version_major": 2,
                            "version_minor": 0,
                            "model_id": "a4e491eadad1446887bdee0fba460711"
                        }
                    },
                    "metadata": {}
                },
                {
                    "output_type": "display_data",
                    "data": {
                        "text/plain": [
                            "model-00003-of-00007.safetensors:   0%|          | 0.00/4.90G [00:00<?, ?B/s]"
                        ],
                        "application/vnd.jupyter.widget-view+json": {
                            "version_major": 2,
                            "version_minor": 0,
                            "model_id": "7f867e16c5be41aab71591a89a020a0c"
                        }
                    },
                    "metadata": {}
                },
                {
                    "output_type": "display_data",
                    "data": {
                        "text/plain": [
                            "model-00007-of-00007.safetensors:   0%|          | 0.00/4.25G [00:00<?, ?B/s]"
                        ],
                        "application/vnd.jupyter.widget-view+json": {
                            "version_major": 2,
                            "version_minor": 0,
                            "model_id": "4238f698afe0429784e565030607e6f6"
                        }
                    },
                    "metadata": {}
                },
                {
                    "output_type": "display_data",
                    "data": {
                        "text/plain": [
                            "model-00006-of-00007.safetensors:   0%|          | 0.00/4.83G [00:00<?, ?B/s]"
                        ],
                        "application/vnd.jupyter.widget-view+json": {
                            "version_major": 2,
                            "version_minor": 0,
                            "model_id": "dc97c7f8d42e4f78a25d4b1ba221074e"
                        }
                    },
                    "metadata": {}
                },
                {
                    "output_type": "display_data",
                    "data": {
                        "text/plain": [
                            "model-00005-of-00007.safetensors:   0%|          | 0.00/5.00G [00:00<?, ?B/s]"
                        ],
                        "application/vnd.jupyter.widget-view+json": {
                            "version_major": 2,
                            "version_minor": 0,
                            "model_id": "dde3e7202d6e4f1aad6711f9fff637de"
                        }
                    },
                    "metadata": {}
                },
                {
                    "output_type": "display_data",
                    "data": {
                        "text/plain": [
                            "model-00004-of-00007.safetensors:   0%|          | 0.00/5.00G [00:00<?, ?B/s]"
                        ],
                        "application/vnd.jupyter.widget-view+json": {
                            "version_major": 2,
                            "version_minor": 0,
                            "model_id": "0f494643bd794bccb352714a655664ed"
                        }
                    },
                    "metadata": {}
                },
                {
                    "output_type": "display_data",
                    "data": {
                        "text/plain": [
                            "Loading checkpoint shards:   0%|          | 0/7 [00:00<?, ?it/s]"
                        ],
                        "application/vnd.jupyter.widget-view+json": {
                            "version_major": 2,
                            "version_minor": 0,
                            "model_id": "0abc2994883a46c59e555a5b853c4c0e"
                        }
                    },
                    "metadata": {}
                },
                {
                    "output_type": "display_data",
                    "data": {
                        "text/plain": [
                            "generation_config.json:   0%|          | 0.00/185 [00:00<?, ?B/s]"
                        ],
                        "application/vnd.jupyter.widget-view+json": {
                            "version_major": 2,
                            "version_minor": 0,
                            "model_id": "03665156aa3c43e5a46a6850cde53054"
                        }
                    },
                    "metadata": {}
                },
                {
                    "output_type": "stream",
                    "name": "stderr",
                    "text": [
                        "WARNING:accelerate.big_modeling:Some parameters are on the meta device because they were offloaded to the cpu.\n"
                    ]
                }
            ]
        },
        {
            "cell_type": "code",
            "source": [
                "image_path = \"/content/drive/MyDrive/Apziva/4th_MonReader/monreader_images/images/testing/notflip/0001_000000002.jpg\"\n",
                "image = Image.open(image_path).convert(\"RGB\")\n",
                "\n",
                "# prompt\n",
                "prompt = \"<image>\\nReturn only the exact visible text in the image.\"\n",
                "\n",
                "# input using processor\n",
                "inputs = processor(text=prompt, images=image, return_tensors=\"pt\").to(device)"
            ],
            "metadata": {
                "id": "VTmhWzHEMuF0"
            },
            "execution_count": null,
            "outputs": []
        },
        {
            "cell_type": "code",
            "source": [
                "# Generate\n",
                "outputs = model.generate(**inputs, max_new_tokens=100)\n",
                "\n",
                "# Decoding\n",
                "output_ids = model.generate(**inputs, max_new_tokens=100)\n",
                "decoded = processor.tokenizer.decode(output_ids[0], skip_special_tokens=True)\n",
                "print(\"🧠 Raw Output:\", decoded)\n",
                "\n",
                "# 5. Extracting only text\n",
                "import re\n",
                "extracted_text = re.findall(r'\"(.*?)\"', decoded)\n",
                "print(\"✅ Extracted Text:\", extracted_text[0] if extracted_text else decoded)"
            ],
            "metadata": {
                "id": "wDMoKik66STO",
                "colab": {
                    "base_uri": "https://localhost:8080/"
                },
                "executionInfo": {
                    "status": "ok",
                    "timestamp": 1748944227404,
                    "user_tz": -540,
                    "elapsed": 7695,
                    "user": {
                        "displayName": "Yoojin Shin",
                        "userId": "07186274958969258933"
                    }
                },
                "outputId": "93f6e4cb-b314-4449-a1e4-196fbe8a6ce0"
            },
            "execution_count": null,
            "outputs": [
                {
                    "output_type": "stream",
                    "name": "stdout",
                    "text": [
                        "🧠 Raw Output: \n",
                        "Return only the exact visible text in the image.\n",
                        "\n",
                        " Networking.\n",
                        "✅ Extracted Text: \n",
                        "Return only the exact visible text in the image.\n",
                        "\n",
                        " Networking.\n"
                    ]
                }
            ]
        },
        {
            "cell_type": "markdown",
            "source": [
                "#### 2nd Try"
            ],
            "metadata": {
                "id": "Kh4a1nTPMdSZ"
            }
        },
        {
            "cell_type": "code",
            "source": [
                "from huggingface_hub import login\n",
                "login(\"TOP_SECRET\")"
            ],
            "metadata": {
                "id": "XRGoMPa0GfmF"
            },
            "execution_count": null,
            "outputs": []
        },
        {
            "cell_type": "code",
            "source": [
                "from google.colab import userdata\n",
                "from huggingface_hub import login\n",
                "\n",
                "hf_token = userdata.get('huggingface_pw')\n",
                "login(token=hf_token)"
            ],
            "metadata": {
                "id": "jK7NwjTzONhU"
            },
            "execution_count": null,
            "outputs": []
        },
        {
            "cell_type": "code",
            "source": [
                "import torch\n",
                "from PIL import Image\n",
                "from transformers import AutoProcessor, AutoModelForCausalLM\n",
                "from transformers.models.idefics2 import Idefics2ForConditionalGeneration\n",
                "\n",
                "model_id = \"HuggingFaceM4/idefics2-8b\"\n",
                "device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n",
                "\n",
                "# Model and Process Load\n",
                "processor = AutoProcessor.from_pretrained(model_id, token=True)\n",
                "model = Idefics2ForConditionalGeneration.from_pretrained(\n",
                "      model_id,\n",
                "      device_map = \"auto\",\n",
                "      torch_dtype = torch.float16,\n",
                "      token=True\n",
                ")"
            ],
            "metadata": {
                "colab": {
                    "base_uri": "https://localhost:8080/",
                    "height": 773,
                    "referenced_widgets": [
                        "5e7725244b0c42929ea6e4b72c8eeab6",
                        "8afba337420d404fbda2e997326181fa",
                        "0d8872e1f4ed40cf9080aea814a54ef7",
                        "57abffce68f64551b2dd0ce761bd5c4b",
                        "91c916331e8a4cc4a3ae91a5ff71e67c",
                        "43893aa189ba47218ec512b9ddecb8df",
                        "be35d208b112484db805404c8caa8e5f",
                        "a5084729ee2049d2ade04b1780f03aa0",
                        "621fae6a9f4040d489361e3910b3be1c",
                        "417aefab211f4e6e8de9ece5c7236c98",
                        "75652162d88441038c722a4f5d7d0e7e",
                        "f4f0b33771de4f7ea4a4117ab5eed090",
                        "79dd9ab81b3b4d518bf6280c855991df",
                        "1967677c86364a0787393e62533f9c9f",
                        "d0c7aaed661640d6adce383e98511817",
                        "fa628db790f746fda484c5c5ec2d3725",
                        "60e5e332c95b4e00ab93875675df80b2",
                        "5534511311044bfabf2f38d129509825",
                        "01cc461c32244bcfbca5f9bcb23ab21e",
                        "f1d6f4f521bb472f980457f18a900676",
                        "4674808e37d2436d9621313667894ecd",
                        "f1229a2a18ab4419afa6dea3bc6ae502",
                        "190bb7ba405e44c29ce2656f3fd559a8",
                        "7378de5b485e4a508c513452b347c9bb",
                        "3a638c55b3f7438fbd70a4d1ef030e7b",
                        "7a724b64d1f14acda46538fbafc12660",
                        "185f2b00281b44c2a38f27f97f447a06",
                        "f33be18350034cbfb32a3e24b657d082",
                        "6a9d34fa22304ef1b31b87d31f5c4949",
                        "9c287abb8bf8420fbe0d7a455021dc58",
                        "a0a9eba3c44b45179cd0418da1e49a27",
                        "7df38418d17541499347134a16a3b2ff",
                        "c2691eddd82440c7b95b0c9c45fe4589",
                        "4cd8ac9790484bab92cb37caed8396f4",
                        "3ba4995568e44beb878d887b967defd4",
                        "f7b44b48e8264fcb9ab5061f15494c33",
                        "f5281779b4bc4d698299a66595de7b25",
                        "c217023ee68d4354a9510d3c14f82050",
                        "f9226080533d4d38a87d4b7b42f9431b",
                        "69efc0af61a84016aa4bd60ba4f5d6e2",
                        "303cda67b2e747dca64e2b65743a1eea",
                        "edd97c1ee40c484d901a0b540fa935fe",
                        "b0ec3d2d8bd94dbb959efd5bf66a6532",
                        "f16e7cec86b2409d81f78dd2d23c237c",
                        "0be6da79480a4baf8b9dd3b974859600",
                        "d9d914d4c4754cf5bd768ecdfc69e23a",
                        "9f46cc5e11cc441d91bdaffa0fc66b39",
                        "f06aa43978754e77a6ca8295c3c9a5bd",
                        "abde39b980664b718bc1d8d0cdca5edf",
                        "d558a1177358426fb9613dc29eaf41e5",
                        "0cc38dd889034dce82216a2b8dbb3f0b",
                        "45d9871cca9d4b8c86bdca7db8a7d808",
                        "fe5d57b81afe49d19d14dbde831ffc9e",
                        "b7a7df4ca2c343aea44f36bceefac7c3",
                        "8015be8b4f3b4f08a0df887d3e67f708",
                        "7685377363c74ec1b2b15ceb641684cd",
                        "83a1e5e4d191434082a70a5b3461acb4",
                        "bd4d971092614653b24a01be279d2bc3",
                        "e68c87fb04f54ca5a4b6c3334c12f749",
                        "de5fe8c895bd4ae782b579b8961543aa",
                        "5f80dc6c06f14011ac9f163ebddf12b3",
                        "02019a0c0d52432a9a0cdb2f6449f764",
                        "ac696f482c1b4b78a0a7ed5288bd0a24",
                        "0b96423df6514c009c84eedd9ae4245b",
                        "42679e42669e4727879ffe5491a3ecc6",
                        "383c364174e64255911ddb9ec04f6f47",
                        "f41d0cf369a44d73bcfe23c3f59a32b8",
                        "0b88a668c9614c419617ecc06d9bc8a8",
                        "6339b0ba7a43465a994c717907c6d8b0",
                        "80064a86582b4794a023b1593720efae",
                        "e65e3b714da3424699677d11ba18d014",
                        "619203c65b244601be315277bf4af1b0",
                        "f40588b69a944672a1db50a4ae2427d1",
                        "a867cefa93324af5af107c928febc90d",
                        "200371816d514e5a9229d16789c238b9",
                        "5fa63033499b47bcacb81b88c0793489",
                        "083eb94ecd1c4ed9abf002f53e091125",
                        "4d7ccf9ecdc44155bcaa7cdab77cc8c2",
                        "f30a01769f894a7ca90cf63e69065c1c",
                        "14e532c16f3647ac81ea28d7aad50506",
                        "f6124c18a4204f51bf04a3b6f4822509",
                        "99b47b841a3d475294e8899e1a5877fb",
                        "e512b03fabfb4b2cb510a20d1bd87cee",
                        "e2e68405e7e14ab5b26db46b9577da02",
                        "15448617b9fa4d26ba7293006e01a378",
                        "f3bc5f1e14c34dac98fc262960b3c7ea",
                        "781a1f6ca77b4202bc8bbafa2c215049",
                        "fed2e1eaf5b14d8c904e61d6bfe8e20d",
                        "86e2a3b326364d0a9330feca8bf15a88",
                        "2b7f7fd9a0f74263b2876ffc5df8c821",
                        "82d18020e95d40e5b8c5c89c01cf0baf",
                        "524f4667a018458c9ce493c21c4fe407",
                        "bad6cd61f7154f6aaba45b81f1c59424",
                        "f5633c170a8a4ff983ed958a7cb734d3",
                        "fe65dd754ea8476baca9d4f366d4179d",
                        "9e9f2f5e5d804d1db91a9f2a19e065af",
                        "8e74759eb4b0408e90cd87d010e93354",
                        "7fa055243d4549a482084e2390df0440",
                        "8409d1acd0054771bc925d3fdc3066ba",
                        "d23ae46e0e6448a2a0b2a30d79e0b972",
                        "9354b2e4509f4594999df22f6374eb26",
                        "f75dfeb957f14bf8b0109cad337bcc47",
                        "4cbaed088f134b419b46135374774518",
                        "3ddbb1a716ec439684ad7721dca27ee9",
                        "c66cc733feec4118b8009f7420a6d490",
                        "a5f23ea7390c4c34b72cec04834e7c9f",
                        "bfa67bd01a564b7f81c8b2cb6e2a2f11",
                        "ead7bd471476400db792548c851aca0c",
                        "bfdf9e0cfcdc4aeaab8b40e7926cb921",
                        "728ca75b57804c8db2feb98f897ed6b8",
                        "52b8065b86794e5f98c4c1eb017046d0",
                        "19189cdc33f344489eb9aa1ce51252e0",
                        "bd5661f448874bdabebbd24ee58fffab",
                        "bf717675ead149a4843537475c5ad4de",
                        "514ac002d5a54d699f967e6c19b3229e",
                        "14bdd38060a64a6ba8877aaa1b0aff10",
                        "2b42060db4004b499092a58c7c67f9dc",
                        "c871ae94b4514dc1b397aaa6dd23ce29",
                        "1ec0702324544f32a85e16cb14d5a61b",
                        "d737ae34151140dba2800cc7396179b2",
                        "d430a1d6b4544aa395f02271e52aca54",
                        "5d1bb53911444da295d93f3a69ed7cd6",
                        "7539a99f4c1241fbb07afae465d596b7",
                        "eeea040d9d34469797192fe0452542be",
                        "89b0c3c7a6ce45aa8750e2efde71d828",
                        "cf92f4c9c50b45f79080cddcb2201747",
                        "a359ab6ac2d44e75b8604e103642fa09",
                        "e40f2bac139f443581f7721d015924f9",
                        "a94018407a66424db7cead1177c99d49",
                        "93813bc0a59448678860c4d5de863cbd",
                        "8fbd980bf593407f9e6c64a13b69a846",
                        "cad4ed6bcc7f46afadd24a962f54d128",
                        "bdbf778550494768a01e7d3d63559859",
                        "dfb6aa361a9e43dda9288be46702afed",
                        "87ca9307f9a747ed8227bb1600518f31",
                        "b28b61203c5b41c5b3db4ca1cd74c079",
                        "aac6bdd518804b159e3346272a6b5aa8",
                        "46fce3f964dc46ee9bac60fe42e4b7b1",
                        "3e79386f1a08445ea0522c140da13345",
                        "3207316ffbf34be793ee780778d1c5c3",
                        "7e7d80f5b3554ae789aa06c846b16a11",
                        "c9fa1f87782a4e24abc31c534ce1d27e",
                        "a4c5290dde3a4bb289b51e02a5862d2f",
                        "9f8021fa659341d69cb8c6900e80f888",
                        "7796d3c6bef44611bf03649785386428",
                        "51df507e16ca4d6094036b67abd7e1f1",
                        "b24c76bec85445fcb9de93b8e4b8d9c2",
                        "07f795b73206471bbec736a9d281d4ce",
                        "3e3b9ca31fc74a6babe820a5a289ed5c",
                        "d00633a832cf4e41b8f9c84a02ae6cff",
                        "9281f535b6ce41e080b7a7d2f8414fae",
                        "b8f78a342dc14bc78c4169f0008da2ad",
                        "3dfad34c6f5a4de9979f0407fdc40594",
                        "48e9087f3abf4aa1b3483d757cacaff9",
                        "a8fe8c393b8d49269a68e29afccb3f8e",
                        "9d6770aa5d4a4713946f23b2426de937",
                        "43811b571e65417e875a4ca2d37000ee",
                        "561c1ec4252c4281a5b0fb892bef1403",
                        "a4e4f6df07be4ad6a65c3caa26ba6f6c",
                        "1ff92505565f4c3494f3fbccb655d455",
                        "3e14dd5dd5f743d7920f2e96b0587c62",
                        "6da3618e39574fb8b4b258a47ca03632",
                        "f00bf0a371034d8994cca703209a5086",
                        "013aaf0a23254429827af2a00ea31306",
                        "3072ab459bdd4ad29f148050d9ab805d",
                        "c0949d61c00846b68deb7a2656a13a7d",
                        "20f989e6c28843788d71ce36adeb966d",
                        "12228c2329954f51a5e6629aaa1b5a90",
                        "351763d4832347329d3088c39a5c0054",
                        "512c34a5a4384dbeb738e3e79db379ee",
                        "f37afe2b904b4382a110db1abbf31fbb",
                        "94b1f48095db42e080576246eb5a12ad",
                        "1f85c08e3f5e4efdb1ed05e106aa4c48",
                        "a49f8c9f0473460db2eb6d2753af8750",
                        "cc2cc2c15ab745629d27cddb3f094fd1",
                        "92f4eb48ce864f1ba1a6f18fddfb3e0e",
                        "e6f4c645bc47403db6d20464d0d03f5f",
                        "e52ddbea22fa4abba45073bc3b83506b",
                        "fb2adfe019d84a2ca483af43ef045e5c",
                        "290999e226bd4c178d5acc643638b273",
                        "bbd5f25e676b4691910f8578edc06c2f",
                        "b6c0dc3b53d44fa988151ee87d986c52",
                        "f563ce5150f34b3f9a38f905e946269d",
                        "78cfa6a2d9f742c98609290be44d34aa",
                        "e14bee71b7854d77a2f62091e74b0eb3",
                        "4fcc6ce2bf9645b2ac2f9970093736f7",
                        "4effabbef2d04854b0c78112101119b4",
                        "4efeffd7305a4c8c9be31458d05ac1a0",
                        "ed5b67c18bcb4380b793c1cef804d554",
                        "6d36f0ae725140e998b21c4a23689056",
                        "d6fcdc189ad14ad99455f4b896a7746e",
                        "44f3f4fc78f942568bcfc7a52faab1e8",
                        "60fba3e92c90426e82157eaa43e45670",
                        "c95103e6da6240eca759f380ed0647b7",
                        "c30eed8486e6469ebf1892429246704c",
                        "cae614c1dc184eefb4fcaa0ada61130a",
                        "d3176500890c47989ba35f772fa7654f",
                        "a8f3901631cc47e996b4998078e6c25e",
                        "58059e90bc2340748252a55ff08d8a7d",
                        "0241e0c3b3c947b58f136584b2260113",
                        "d0ab4a69590a42b89f17ef8c38d6721b",
                        "35a46d3f8b51494494a76d8d0ee970ab",
                        "264d93e9d5e54c868b2e23087561282d",
                        "b8d1919d5f864914870b0477e01d94fd",
                        "f096015aeb92487281d99ce3990acf95",
                        "29cc2319104b400aa162e3a11c11071a",
                        "a6a2ebee8b1d490ea38f632872321973",
                        "b9a1fcc9f498405a86f5bb86b666f403",
                        "54a70b80b501404fb6cd11c0e560dc86"
                    ]
                },
                "id": "v0MXv1Hnwl1x",
                "executionInfo": {
                    "status": "ok",
                    "timestamp": 1748960486159,
                    "user_tz": -540,
                    "elapsed": 499808,
                    "user": {
                        "displayName": "Yoojin Shin",
                        "userId": "07186274958969258933"
                    }
                },
                "outputId": "a37b7b1f-3aae-42fb-8b34-55bd658b4e36"
            },
            "execution_count": null,
            "outputs": [
                {
                    "output_type": "stream",
                    "name": "stderr",
                    "text": [
                        "/usr/local/lib/python3.11/dist-packages/huggingface_hub/utils/_auth.py:94: UserWarning: \n",
                        "The secret `HF_TOKEN` does not exist in your Colab secrets.\n",
                        "To authenticate with the Hugging Face Hub, create a token in your settings tab (https://huggingface.co/settings/tokens), set it as secret in your Google Colab and restart your session.\n",
                        "You will be able to reuse this secret in all of your notebooks.\n",
                        "Please note that authentication is recommended but still optional to access public models or datasets.\n",
                        "  warnings.warn(\n"
                    ]
                },
                {
                    "output_type": "display_data",
                    "data": {
                        "text/plain": [
                            "processor_config.json:   0%|          | 0.00/483 [00:00<?, ?B/s]"
                        ],
                        "application/vnd.jupyter.widget-view+json": {
                            "version_major": 2,
                            "version_minor": 0,
                            "model_id": "5e7725244b0c42929ea6e4b72c8eeab6"
                        }
                    },
                    "metadata": {}
                },
                {
                    "output_type": "stream",
                    "name": "stderr",
                    "text": [
                        "Chat templates should be in a 'chat_template.jinja' file but found key='chat_template' in the processor's config. Make sure to move your template to its own file.\n"
                    ]
                },
                {
                    "output_type": "display_data",
                    "data": {
                        "text/plain": [
                            "preprocessor_config.json:   0%|          | 0.00/460 [00:00<?, ?B/s]"
                        ],
                        "application/vnd.jupyter.widget-view+json": {
                            "version_major": 2,
                            "version_minor": 0,
                            "model_id": "f4f0b33771de4f7ea4a4117ab5eed090"
                        }
                    },
                    "metadata": {}
                },
                {
                    "output_type": "display_data",
                    "data": {
                        "text/plain": [
                            "tokenizer_config.json:   0%|          | 0.00/1.64k [00:00<?, ?B/s]"
                        ],
                        "application/vnd.jupyter.widget-view+json": {
                            "version_major": 2,
                            "version_minor": 0,
                            "model_id": "190bb7ba405e44c29ce2656f3fd559a8"
                        }
                    },
                    "metadata": {}
                },
                {
                    "output_type": "display_data",
                    "data": {
                        "text/plain": [
                            "tokenizer.model:   0%|          | 0.00/493k [00:00<?, ?B/s]"
                        ],
                        "application/vnd.jupyter.widget-view+json": {
                            "version_major": 2,
                            "version_minor": 0,
                            "model_id": "4cd8ac9790484bab92cb37caed8396f4"
                        }
                    },
                    "metadata": {}
                },
                {
                    "output_type": "display_data",
                    "data": {
                        "text/plain": [
                            "tokenizer.json:   0%|          | 0.00/1.80M [00:00<?, ?B/s]"
                        ],
                        "application/vnd.jupyter.widget-view+json": {
                            "version_major": 2,
                            "version_minor": 0,
                            "model_id": "0be6da79480a4baf8b9dd3b974859600"
                        }
                    },
                    "metadata": {}
                },
                {
                    "output_type": "display_data",
                    "data": {
                        "text/plain": [
                            "added_tokens.json:   0%|          | 0.00/92.0 [00:00<?, ?B/s]"
                        ],
                        "application/vnd.jupyter.widget-view+json": {
                            "version_major": 2,
                            "version_minor": 0,
                            "model_id": "7685377363c74ec1b2b15ceb641684cd"
                        }
                    },
                    "metadata": {}
                },
                {
                    "output_type": "display_data",
                    "data": {
                        "text/plain": [
                            "special_tokens_map.json:   0%|          | 0.00/1.04k [00:00<?, ?B/s]"
                        ],
                        "application/vnd.jupyter.widget-view+json": {
                            "version_major": 2,
                            "version_minor": 0,
                            "model_id": "f41d0cf369a44d73bcfe23c3f59a32b8"
                        }
                    },
                    "metadata": {}
                },
                {
                    "output_type": "display_data",
                    "data": {
                        "text/plain": [
                            "config.json:   0%|          | 0.00/684 [00:00<?, ?B/s]"
                        ],
                        "application/vnd.jupyter.widget-view+json": {
                            "version_major": 2,
                            "version_minor": 0,
                            "model_id": "4d7ccf9ecdc44155bcaa7cdab77cc8c2"
                        }
                    },
                    "metadata": {}
                },
                {
                    "output_type": "display_data",
                    "data": {
                        "text/plain": [
                            "model.safetensors.index.json:   0%|          | 0.00/74.4k [00:00<?, ?B/s]"
                        ],
                        "application/vnd.jupyter.widget-view+json": {
                            "version_major": 2,
                            "version_minor": 0,
                            "model_id": "86e2a3b326364d0a9330feca8bf15a88"
                        }
                    },
                    "metadata": {}
                },
                {
                    "output_type": "display_data",
                    "data": {
                        "text/plain": [
                            "Fetching 7 files:   0%|          | 0/7 [00:00<?, ?it/s]"
                        ],
                        "application/vnd.jupyter.widget-view+json": {
                            "version_major": 2,
                            "version_minor": 0,
                            "model_id": "d23ae46e0e6448a2a0b2a30d79e0b972"
                        }
                    },
                    "metadata": {}
                },
                {
                    "output_type": "display_data",
                    "data": {
                        "text/plain": [
                            "model-00002-of-00007.safetensors:   0%|          | 0.00/4.99G [00:00<?, ?B/s]"
                        ],
                        "application/vnd.jupyter.widget-view+json": {
                            "version_major": 2,
                            "version_minor": 0,
                            "model_id": "52b8065b86794e5f98c4c1eb017046d0"
                        }
                    },
                    "metadata": {}
                },
                {
                    "output_type": "display_data",
                    "data": {
                        "text/plain": [
                            "model-00003-of-00007.safetensors:   0%|          | 0.00/4.90G [00:00<?, ?B/s]"
                        ],
                        "application/vnd.jupyter.widget-view+json": {
                            "version_major": 2,
                            "version_minor": 0,
                            "model_id": "5d1bb53911444da295d93f3a69ed7cd6"
                        }
                    },
                    "metadata": {}
                },
                {
                    "output_type": "display_data",
                    "data": {
                        "text/plain": [
                            "model-00006-of-00007.safetensors:   0%|          | 0.00/4.83G [00:00<?, ?B/s]"
                        ],
                        "application/vnd.jupyter.widget-view+json": {
                            "version_major": 2,
                            "version_minor": 0,
                            "model_id": "bdbf778550494768a01e7d3d63559859"
                        }
                    },
                    "metadata": {}
                },
                {
                    "output_type": "display_data",
                    "data": {
                        "text/plain": [
                            "model-00004-of-00007.safetensors:   0%|          | 0.00/5.00G [00:00<?, ?B/s]"
                        ],
                        "application/vnd.jupyter.widget-view+json": {
                            "version_major": 2,
                            "version_minor": 0,
                            "model_id": "9f8021fa659341d69cb8c6900e80f888"
                        }
                    },
                    "metadata": {}
                },
                {
                    "output_type": "display_data",
                    "data": {
                        "text/plain": [
                            "model-00001-of-00007.safetensors:   0%|          | 0.00/4.64G [00:00<?, ?B/s]"
                        ],
                        "application/vnd.jupyter.widget-view+json": {
                            "version_major": 2,
                            "version_minor": 0,
                            "model_id": "a8fe8c393b8d49269a68e29afccb3f8e"
                        }
                    },
                    "metadata": {}
                },
                {
                    "output_type": "display_data",
                    "data": {
                        "text/plain": [
                            "model-00005-of-00007.safetensors:   0%|          | 0.00/5.00G [00:00<?, ?B/s]"
                        ],
                        "application/vnd.jupyter.widget-view+json": {
                            "version_major": 2,
                            "version_minor": 0,
                            "model_id": "c0949d61c00846b68deb7a2656a13a7d"
                        }
                    },
                    "metadata": {}
                },
                {
                    "output_type": "display_data",
                    "data": {
                        "text/plain": [
                            "model-00007-of-00007.safetensors:   0%|          | 0.00/4.25G [00:00<?, ?B/s]"
                        ],
                        "application/vnd.jupyter.widget-view+json": {
                            "version_major": 2,
                            "version_minor": 0,
                            "model_id": "e6f4c645bc47403db6d20464d0d03f5f"
                        }
                    },
                    "metadata": {}
                },
                {
                    "output_type": "display_data",
                    "data": {
                        "text/plain": [
                            "Loading checkpoint shards:   0%|          | 0/7 [00:00<?, ?it/s]"
                        ],
                        "application/vnd.jupyter.widget-view+json": {
                            "version_major": 2,
                            "version_minor": 0,
                            "model_id": "4efeffd7305a4c8c9be31458d05ac1a0"
                        }
                    },
                    "metadata": {}
                },
                {
                    "output_type": "display_data",
                    "data": {
                        "text/plain": [
                            "generation_config.json:   0%|          | 0.00/185 [00:00<?, ?B/s]"
                        ],
                        "application/vnd.jupyter.widget-view+json": {
                            "version_major": 2,
                            "version_minor": 0,
                            "model_id": "58059e90bc2340748252a55ff08d8a7d"
                        }
                    },
                    "metadata": {}
                },
                {
                    "output_type": "stream",
                    "name": "stderr",
                    "text": [
                        "WARNING:accelerate.big_modeling:Some parameters are on the meta device because they were offloaded to the cpu.\n"
                    ]
                }
            ]
        },
        {
            "cell_type": "code",
            "source": [
                "# importing images\n",
                "image_path = \"/content/drive/MyDrive/Apziva/4th_MonReader/monreader_images/images/testing/notflip/0001_000000002.jpg\"\n",
                "image = Image.open(image_path).convert(\"RGB\")\n",
                "\n",
                "# prompt\n",
                "prompt = \"<image>\\nExtract all visible text from the image. Only respond with the text.\"\n",
                "\n",
                "# input using processor\n",
                "inputs = processor(text=prompt, images=image, return_tensors=\"pt\").to(device)\n",
                "\n",
                "# Generate\n",
                "generate_ids = model.generate(**inputs, max_new_tokens=100)\n",
                "output_text = processor.batch_decode(generate_ids, skip_special_tokens=True)[0]\n",
                "\n",
                "print(\"🧠 IDEFICS Output:\")\n",
                "print(output_text)"
            ],
            "metadata": {
                "colab": {
                    "base_uri": "https://localhost:8080/"
                },
                "id": "VYYTyUMSyrI0",
                "executionInfo": {
                    "status": "ok",
                    "timestamp": 1748960865550,
                    "user_tz": -540,
                    "elapsed": 13817,
                    "user": {
                        "displayName": "Yoojin Shin",
                        "userId": "07186274958969258933"
                    }
                },
                "outputId": "462f745c-4b89-496f-90a1-96a3767b1e29"
            },
            "execution_count": null,
            "outputs": [
                {
                    "output_type": "stream",
                    "name": "stdout",
                    "text": [
                        "🧠 IDEFICS Output:\n",
                        "\n",
                        "Extract all visible text from the image. Only respond with the text.\n",
                        " NETWORK ASIA.\n"
                    ]
                }
            ]
        },
        {
            "cell_type": "code",
            "source": [],
            "metadata": {
                "id": "eAI3NpBgyrGm"
            },
            "execution_count": null,
            "outputs": []
        },
        {
            "cell_type": "code",
            "source": [],
            "metadata": {
                "id": "kWBOEZzZyrEL"
            },
            "execution_count": null,
            "outputs": []
        }
    ]
}